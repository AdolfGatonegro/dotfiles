" vimrc
" gatoneg.ro
" last update: 2022-10-07
" ----------------------------------------------------------------------------
" turns out that a fully decked-out nvim is bloat

" plugins:
"
" 	adolfgatonegro/tokyonight-vim
" 	ap/vim-css-color
" 	itchyny/lightline.vim
" 	jiangmiao/auto-pairs
" 	tpope/vim-sensible
" 	tpope/vim-commentary
" 	vifm/vifm.vim

" set xdg environment for vim ------------------------------------------------
if empty("$XDG_CACHE_HOME")
	let $XDG_CACHE_HOME="$HOME/.cache"
endif

if empty("$XDG_CONFIG_HOME")
	let $XDG_CONFIG_HOME="$HOME/.config"
endif

if empty("$XDG_DATA_HOME")
	let $XDG_DATA_HOME="$HOME/.local/share"
endif

set directory=$XDG_CACHE_HOME/vim/swap,~/,/tmp
set backupdir=$XDG_CACHE_HOME/vim/backup,~/,/tmp
set undodir=$XDG_CACHE_HOME/vim/undo,~/,/tmp
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
set runtimepath+=$XDG_CONFIG_HOME/vim,$XDG_CONFIG_HOME/vim/after,$VIM,$VIMRUNTIME
set packpath=~/.config/vim/,~/.vim,/usr/share/vim/vimfiles,/usr/share/vim/vim90,/usr/share/vim/vimfiles/after,~/.vim/after
let $MYVIMRC="$XDG_CONFIG_HOME/vim/vimrc"

" colours --------------------------------------------------------------------
set termguicolors

let g:tokyonight_style = 'night'
let g:tokyonight_enable_italic = 1
let g:tokyonight_transparent_background = 1

colorscheme tokyonight

" lightline ------------------------------------------------------------------
let g:lightline = {'colorscheme': 'rosepine'}

" options --------------------------------------------------------------------
set number
set numberwidth=4
set cmdheight=1
set tabstop=4
set shiftwidth=4
set softtabstop=0 noexpandtab
set showtabline=2
set hlsearch
set ignorecase
set confirm
set clipboard=unnamedplus
set undofile
set wildmode=longest:full,full

set list
set listchars=tab:>-
set listchars+=space:•
set listchars+=trail:⋄

:autocmd InsertEnter,InsertLeave * set cursorline! " cursorline for insert mode

let mapleader="`"

" cursors --------------------------------------------------------------------
let &t_SI = "\e[6 q"
let &t_SR = "\e[4 q"
let &t_EI = "\e[2 q"

" key mapping ----------------------------------------------------------------
map Q <Nop>
map q <Nop>

nnoremap <leader><space> :nohlsearch<CR>
nnoremap <C-x> :set wrap!<CR>

noremap j gj
noremap k gk

nnoremap B ^
nnoremap E $

" move/indent text blocks
xnoremap J :move '>+1<CR>gv-gv
xnoremap K :move '<-2<CR>gv-gv
xnoremap > >gv
xnoremap < <gv

" highlight last inserted text
nnoremap gV `[v`]

" spell check
nnoremap <F4> ":setlocal spell! spelllang=es_mx<CR>
nnoremap <F5> ":setlocal spell! spelllang=en_gb<CR>

" tabs
nnoremap <leader>p :tabprevious<CR>
nnoremap <leader>n :tabnext<CR>
nnoremap <leader>t :tabnew<CR>

" split navigation
nnoremap <up> <C-w>k
nnoremap <down> <C-w>j
nnoremap <left> <C-w>h
nnoremap <right> <C-w>l

" split resizing
nnoremap <C-up> :resize +2<CR>
nnoremap <C-down> :resize -2<CR>
nnoremap <C-left> :vertical resize -2<CR>
nnoremap <C-right> :vertical resize +2<CR>

" buffers
nnoremap <S-l> :bnext<CR>
nnoremap <S-h> :bprevious<CR>
nnoremap <S-x> :bd<CR>

" vifm.vim
nnoremap <leader>vf :Vifm<CR>
nnoremap <leader>vs :VsplitVifm<CR>
nnoremap <leader>sp :SplitVifm<CR>
nnoremap <leader>dv :DiffVifm<CR>
nnoremap <leader>vt :TabVifm<CR>

" write/exit
nnoremap <leader>q :x<CR>
nnoremap <leader>Q :qa<CR>
nnoremap <C-s> :update<CR>

" functions ------------------------------------------------------------------
" restore cursor position
augroup resume_edit_position
	autocmd!
	autocmd BufReadPost *
		\ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
		\ | execute "normal! g`\"zvzz"
		\ | endif
augroup end

augroup text_file_width
	autocmd!
	autocmd BufNewFile,BufRead *.md,*.MD,*.markdown,*.txt,*.tex setlocal textwidth=80
augroup end
