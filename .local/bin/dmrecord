#!/bin/sh

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 audio`: Record only audio
# `$0 desktop`: Record only screen
# `$0 slice`: Record only selected window or screen area
# `$0 screencast`: Record both audio and screen
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

getdim() { xrandr | sed -n "s/\s*\([0-9]\+x[0-9]\+\).*\*.*/\1/p" ;}

updateicon() { \
	echo "$1" > /tmp/recordingicon
	pkill -RTMIN+18 dwmblocks
	}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
	pkill -RTMIN+18 dwmblocks
	}

screencast() { \
	ffmpeg -y \
	-f x11grab \
	-framerate 30 \
	-s "$(getdim)" \
	-i "$DISPLAY" \
	-r 24 \
	-use_wallclock_as_timestamps 1 \
	-f alsa -thread_queue_size 1024 -i default \
 	-c:v h264 \
	-crf 0 -preset ultrafast -c:a aac \
	"$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^󰹑  ^C7^"
       	}

desktop() { ffmpeg \
	-f x11grab \
	-framerate 30 \
	-s "$(getdim)" \
	-i "$DISPLAY" \
 	-c:v libx264 -qp 0 -r 30 \
	"$HOME/desktop-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^󰹑 ^C7^"
	}

webcamhidef() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 1920x1080 \
	"$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^󰖠 󰟏 ^C7^"
	}

webcam() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 640x480 \
	"$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^󰖠 ^C7^"
	}

audio() { \
	ffmpeg \
	-f alsa -i default \
	-c:a flac \
	"$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^ ^C7^"
	}

askrecording() { \
	choice=$(printf "audio\\ndesktop\\nslice\\nscreencast\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
	case "$choice" in
		audio) audio;;
		desktop) desktop;;
		slice) slice;;
		screencast) screencast;;
		webcam) webcam;;
		"webcam (hi-def)") webcamhidef;;
	esac
	}

asktoend() { \
	response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
	[ "$response" = "Yes" ] &&  killrecording
	}

slice()
{
	slop -f "%x %y %w %h" > /tmp/slop
	read -r X Y W H < /tmp/slop
	rm /tmp/slop

	ffmpeg \
	-f x11grab \
	-framerate 30 \
	-video_size "$W"x"$H" \
	-i :0.0+"$X,$Y" \
	-c:v libx264 -qp 0 -r 30 \
	"$HOME/slice-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^󰹑 ^C7^"
}

case "$1" in
	audio) audio;;
	desktop) desktop;;
	slice) slice;;
	screencast) screencast;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
