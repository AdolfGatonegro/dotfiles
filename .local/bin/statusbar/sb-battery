#!/bin/sh

case $BLOCK_BUTTON in
	4) backlightctl -inc 10 ;;
	5) backlightctl -dec 10 ;;
	2) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

BAT=/sys/class/power_supply/BAT0/capacity

if [ ! -f $BAT ]; then
	exit
fi

if [ $(cat /sys/class/power_supply/BAT0/status) ] = "Charging" ]; then
	echo "^C1^󰂅^C7^ $(cat $BAT)%"
else
	for x in $(cat $BAT);
	do
	case $x in
		100|9[0-9])    echo "^C2^󰁹^C7^ $(cat $BAT)%" ;;
		8[0-9]|7[0-9]) echo "^C2^󰂀^C7^ $(cat $BAT)%" ;;
		6[0-9]|5[0-9]) echo "^C3^󰁾^C7^ $(cat $BAT)%" ;;
		4[0-9]|3[0-9]) echo "^C3^󰁼^C7^ $(cat $BAT)%" ;;
		*)             echo "^C1^󰁻^C7^ $(cat $BAT)%" ;;
	esac
	done
fi

# Loop through all attached batteries and format the info
# for battery in /sys/class/power_supply/BAT?*; do
# 	# If non-first battery, print a space separator.
# 	[ -n "${capacity+x}" ] && printf " "
# 	# Sets up the status and capacity
# 	case "$(cat "$battery/status" 2>&1)" in
# 		"Full") status="^C2^󰂄 ^C7^";;
# 		"Discharging") status="^C3^󰁹 ^C7^" ;;
# 		"Charging") status="^C2^󰂅 ^C7^" ;;
# 		"Not charging") status="^C1^󱉞 ^C7^" ;;
# 		"Unknown") status="^C1^󰂎 ^C7^" ;;
# 		*) exit 1 ;;
# 	esac
# 	capacity="$(cat "$battery/capacity" 2>&1)"
# 	# Set a warning status if capacity is low and discharging
# 	[ "$status" = "^C3^󰁹 ^C7^" ] && [ "$capacity" -le 25 ] && status="^C1^󰁻 ^C7^"
# 	# Prints the info
# 	printf "%s%s%d%%" "$status" "$warn" "$capacity"
# done && printf "\\n"
