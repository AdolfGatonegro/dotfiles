#!/bin/sh

case $BLOCK_BUTTON in
	1) "$TERMINAL" -e nmtui; pkill -RTMIN+15 dwmblocks;;
	2) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

for adapter in /sys/class/net/w?* /sys/class/net/e?*; do

    # Check if the adapter exists to avoid errors
    if [ -e "$adapter" ]; then
        # Extract adapter name from path
        adapter_name=$(basename "$adapter")

		# Which type of adapter is it?
		case "$adapter_name" in
			e*) adapter_type="ethernet"
				adapter_icon="󰈀 " ;;
			w*) adapter_type="wireless"
				adapter_icon="󰖩 " ;;
			 *) adapter_type="unknown"
				adapter_icon="?" ;;
		esac

        # Check if the adapter is up or down
		adapter_state="$(cat "$adapter/operstate")"

        if [ "$adapter_state" = "up" ]; then
			# Check connectivity
			connectivity="$(nmcli networking connectivity check)"

			# If wireless, check signal strength
			if [ "$adapter_type" = "wireless" ]; then
				signal="$(awk '/^\s*w/ { print int($3 * 100 / 70) "% " }' /proc/net/wireless)"
				# signal="$(nmcli dev wifi list | awk '/\*/{if (NR!=1) {print $8 "% " $3}}')"
			fi

			case "$connectivity" in
				none)    net_status="^C1^$adapter_icon^C7^$signal^C1^X^C7^" ;;
				portal)  net_status="^C3^$adapter_icon^C7^$signal^C3^P^C7^" ;;
				limited) net_status="^C3^$adapter_icon^C7^$signal^C3^!^C7^" ;;
				unknown) net_status="^C3^$adapter_icon^C7^$signal^C3^?^C7^" ;;
				full)    net_status="^C2^$adapter_icon^C7^$signal^C2^OK^C7^" ;;
				*)       net_status="$adapter_icon [Invalid]" ;;
			esac

			# Adapter is up, print status
			printf "%s" "$net_status "
        else
			# Adapter is down, 
			printf "%s" "^C8^$adapter_icon^C7^"
        fi
    fi
done && printf "\\n"

