#!/bin/sh
# gatoneg.ro
# Stolen from Luke Smith
#
# Takes URL or file path and performs an appropriate action: open images in
# nsxiv, open videos and YouTube links in mpv, open pdfs and ebooks in zathura,
# and download music files. anything else will be passed to the browser.

shopt -s extglob

if [ -z "$1" ]; then
	url="$(xclip -o)"
else
	url="$1"
fi

case "$url" in
	# Video files and YouTube links
	*mkv|*webm|*mp4*(?)|*youtube.com/watch*|*youtube.com/playlist*|*youtube.com/shorts*|*youtube.com/clip*|*youtu.be*|*youtube-nocookie.com/embed*|*youtube.com/embed*|*streamable.com/*|*dailymotion.com/video/*|*motorsport.tv/motorsporttv/video/*)
		setsid -f umpv "$url" >/dev/null 2>&1 &
		notify-send "📺 Adding to mpv queue" "$(curl $url -so - | grep -iPo '(?<=<title>)(.*)(?=</title>)')";;
	# images
	*png*(?)|*jpg*(?)|*jpe|*jpeg|*gif)
		curl -sL "$url" > "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" &&
		imgview "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" >/dev/null 2>&1 &
		notify-send "🖼️ Opening image" "$url";;
	# pdfs and ebooks
	*pdf|*cbz|*cbr)
		curl -sL "$url" > "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" &&
		zathura "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" >/dev/null 2>&1 &
		notify-send "📖 Opening document" "$url";;
	# audio files
	*mp3*(?)|*ogg|*flac|*opus)
		curl -sL "$url" > "$HOME/downloads/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" &&
		umpv "$HOME/downloads/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" >/dev/null 2>&1 &
		notify-send "🎶 Downloading audio file" "$url" ;;
	# reddit links
	*reddit.com/*)
		redditurl=$(echo "$url" | sed "s/\(www\.\)\{0,1\}reddit.com/libreddit.northboot.xyz/g")
		setsid -f "$BROWSER" -P Minimal --class="minimal" --new-tab "$redditurl" >/dev/null 2>&1 & \
		notify-send "🌐 Opening URL" "$redditurl";;
	*)
		[ -f "$url" ] && setsid -f "$TERMINAL" -e "$EDITOR" "$url" >/dev/null 2>&1 || \
		setsid -f "$BROWSER" -P Minimal --class="minimal" --new-tab "$url" >/dev/null 2>&1 &
		notify-send "🌐 Opening URL" "$url";;
esac
