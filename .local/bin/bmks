#!/bin/sh

# set prefered launcher
PREFERED_LAUNCHER=dmenu
# set path where urls will be stored
URL_FILE_PATH="$HOME/docs/bmks"
# name of file urls will be stored in
URL_FILE_NAME=urls

show_usage() {
	printf "bmks: unix bookmark management that sucks less

Usage:
bmks help
	show this help message.
bmks add [url]
	Add a new bookmark. If no URL is provided bmks will
	search the clipboard for a valid one (requires xclip).
bmks del
	Remove a bookmark
bmks ls
	Show all bookmarks
bmks file
	Open the bookmarks file using the default \$EDITOR.
bmks dmenu
	Manual switch for displaying bookmarks in dmenu.
bmks fzf
	manual switch for displaying bookmarks in fzf.

This is a modified version of the bmks script found at https://tools.suckless.org/dmenu/scripts. New features include basic URL validation, duplicate prevention, quick access to editing the bookmarks file, system notifications using notify-send, and searching the clipboard if bmks add not given a URL. The clipboard search feature means new bookmarks can be added from a key binding, without needing to open a terminal.

Configuration is done by directly editing the script. Two launchers are available (dmenu and fzf). You can specify which one to use by adding to the PREFERED_LAUNCHER variable directly in the script. Both will display a menu that will allow you to choose a bookmark and open it in your default browser.

If you would prefer to have your bookmarks stored in alternate location there are also variables that can be changed for that. The default is /home/docs/bmks/urls\n"
}

bmks_validate() {
	clipboard=$(xclip -o)
	[ -z "${url}" ] && { echo "$clipboard" | grep "^http" > /dev/null 2>&1; } && url=$clipboard
	[ -z "${url}" ] && notify-send "bmks error" "No valid URL provided." && exit 0
}

bmks_add() {
	bmks_validate
	if grep "$url$" $URL_FILE_PATH/$URL_FILE_NAME > /dev/null; then
		notify-send "Already bookmarked" "$url is already bookmarked." && exit 0
	else
		notify-send "Adding to bookmarks" "$url"
		description=$(dmenu -p "Bookmark description:" <&- && echo)
		[ -z "$description" ] && notify-send "bmks" "No description provided." & exit 0 | \
		[ -n "$description" ] && echo "$description - $url" >> $URL_FILE_PATH/$URL_FILE_NAME && \
			notify-send "bmks" "Added bookmark:\n$description - $url" & exit 0
	fi
}

bmks_ls() {
	bmks_check
	cat $URL_FILE_PATH/$URL_FILE_NAME | sort
}

bmks_del() {
	bmks_check
	case $PREFERED_LAUNCHER in
		dmenu) sed -i "/$(cat $URL_FILE_PATH/$URL_FILE_NAME | sort | dmenu -i -p 'Delete which bookmark?' -l 20 | sed -r 's/([\$\.\*\/\[\\^])/\\\1/g' | sed 's/[]]/\[]]/g')/d" $URL_FILE_PATH/$URL_FILE_NAME && notify-send "bmks" "Bookmark deleted.";;
		fzf) sed -i "/$(cat $URL_FILE_PATH/$URL_FILE_NAME | sort | fzf | sed -r 's/([\$\.\*\/\[\\^])/\\\1/g' | sed 's/[]]/\[]]/g')/d)/d" $URL_FILE_PATH/$URL_FILE_NAME ;;
	esac
}

bmks_display() {
	bmks_check
	case $PREFERED_LAUNCHER in
		dmenu) cat $URL_FILE_PATH/$URL_FILE_NAME | sort | dmenu -i -p "Open a bookmark:" -l 20 | awk '{print $(NF)}' | xargs -I '{}' $BROWSER {} ;;
		fzf) cat $URL_FILE_PATH/$URL_FILE_NAME | sort | fzf | awk '{print $(NF)}' | xargs -I '{}' $BROWSER {} ;;
	esac
}

bmks_check() {
	[ ! -s $URL_FILE_PATH/$URL_FILE_NAME ] && printf "Error: No bookmarks found to display. Try adding some!\n\n" && show_usage && exit 0
}

[ ! -d $URL_FILE_PATH ] && mkdir $URL_FILE_PATH
[ ! -f $URL_FILE_PATH/$URL_FILE_NAME ] && touch $URL_FILE_PATH/$URL_FILE_NAME

case "$1" in
	"help") show_usage ;;
	"add") url=$2; bmks_add ;;
	"del") bmks_del ;;
	"ls") bmks_ls ;;
	"file") $EDITOR $URL_FILE_PATH/$URL_FILE_NAME ;;
	"dmenu") PREFERED_LAUNCHER=$1; bmks_display ;;
	"fzf") PREFERED_LAUNCHER=$1; bmks_display ;;
	*) bmks_display ;;
esac
