#!/bin/sh
# gatoneg.ro
# Stolen from Luke Smith
#
# Takes URL or file path and performs an appropriate action: open images in
# nsxiv, open videos and YouTube links in mpv, open pdfs and ebooks in zathura,
# and download music files. anything else will be passed to the browser.

shopt -s extglob

if [ -z "$1" ]; then
	url="$(xclip -o)"
else
	url="$1"
fi

notify="notify-send -t 2500"

case "$url" in
	# YouTube videos, playlists, and embeds
	*youtube.com/watch*|*youtube.com/playlist*|*youtu.be*|*youtube-nocookie.com/embed*|*youtube.com/embed*)
		setsid -f mpv $MPV_PROFILE -quiet "$url" >/dev/null 2>&1 &
		$notify "📺 mpv" "$(curl $url -so - | grep -iPo '(?<=<title>)(.*)(?=</title>)')";;
	# video files
	*mkv|*webm|*mp4*(?))
		setsid -f mpv $MPV_PROFILE -quiet "$url" >/dev/null 2>&1 &
		$notify "📺 mpv - loading" "$url";;
	# images
	*png*(?)|*jpg*(?)|*jpe|*jpeg|*gif)
		curl -sL "$url" > "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" &&
		nsxiv_rifle "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 &
		$notify "📸 nsxiv - opening" "$url";;
	# pdfs and ebooks
	*pdf|*cbz|*cbr)
		curl -sL "$url" > "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" &&
		zathura "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 &
		$notify "📖 zathura - opening" "$url";;
	# music files
	*mp3*(?)|*flac|*opus)
		curl -LO "$url"  >/dev/null 2>&1 &
		$notify "🎵 curl - downloading" "$url";;
	# everything else
	*)
		# w3m "$url"
		[ -f "$url" ] && setsid -f "$TERMINAL" -e "$EDITOR" "$url" >/dev/null 2>&1 || \
			setsid -f "$BROWSER" -P Minimal --class="minimal" --new-tab "$url" >/dev/null 2>&1 &
		$notify "🌐 $BROWSER - opening" "$url";;
esac
